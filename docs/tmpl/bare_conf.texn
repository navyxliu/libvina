\RequirePackage{lineno}
\documentclass[conference]{IEEEtran}
%\documentclass[draft, onecolumn]{IEEEtran}
% correct bad hyphenation here
\hyphenation{op-tical net-works semi-conduc-tor}

% =============+s\\==================================================
%\usepackage{subfigure, graphicx, booktabs}
%\usepackage{algpseudocode, algorithmicx, algorithm}
\usepackage{multirow, amsmath, amsthm, listings, booktabs}

% *** GRAPHICS RELATED PACKAGES ***
%
\ifCLASSINFOpdf
   \usepackage[pdftex]{graphicx}
  % declare the path(s) where your graphic files are
   \graphicspath{{../pdf/}{../jpeg/}}
  % and their extensions so you won't have to specify these with
  % every instance of \includegraphics
   \DeclareGraphicsExtensions{.pdf,.jpeg,.png}
   \DeclareGraphicsRule{*}{mps}{*}{}
\else
  % or other class option (dvipsone, dvipdf, if not using dvips). graphicx
  % will default to the driver specified in the system graphics.cfg if no
  % driver is specified.
   \usepackage[dvips]{graphicx}
  % declare the path(s) where your graphic files are
   \graphicspath{{./}}
  % and their extensions so you won't have to specify these with
  % every instance of \includegraphics
   \DeclareGraphicsExtensions{.png, .pdf, .eps}
\fi

% ===============================================================
\newtheorem{theorem}{Theorem}[section]
\newtheorem{conjecture}[theorem]{Conjecture}
\newtheorem{corollary}[theorem]{Corollary}
\newtheorem{proposition}[theorem]{Proposition}
\newtheorem{lemma}[theorem]{Lemma}
%\newdef{definition}[theorem]{Definition}
%\newdef{remark}[theorem]{Remark}


\begin{document}
\title{A Template Metaprogramming approach to Support Parallel
  Programs for Multicores}


% author names and affiliations
% use a multiple column layout for up to three different
% affiliations
\author{
\IEEEauthorblockN{Xin Liu, Daqiang Zhang, Jingyu Zhou, Minyi Guo, Yao Shen}
\IEEEauthorblockA{Department of Computer Science\\
Shanghai Jiao Tong University\\
No. 800, Dongchuan Road, Shanghai, P.R.China\\
\{navyliu, zhangdq\}@sjtu.edu.cn, \{guo-my, zhou-jy, shen\_yao\}@cs.sjtu.edu.cn}
}

% make the title area
\maketitle


\begin{abstract}
In advent of multicore era, plain C/C++ programming language can not
fully reflect computer architectures. Source-to-source
transformation helps tailor programs close to contemporary
hardwares. In this paper, we propose template-based approach to perform 
transformation for programs with rich static information.
We present C++ template metaprogramming techniques to conduct
parallelization for specific
multicores. Parallel pattern and execution model are provided in the form of
template classes and oraganized as library. We implement a prototype
template library -- libvina, to demonstrate the idea. It enables
programmers to utilize new architectural
features and add parallelization strategies by extending template library. 
Finally, we evaluate our template library on
commodity x86 and GPU platforms by a variety of typical applications
in multimedia and scientific fields. In experiments, we show that our
approach is flexible to support multiple parallel models and capable
of transforming sequential code to parallel equivalence  according to
specific multicore architectures. Moreover, the cost of programmability using our
approach to adapt to more than one multicore platform is manageable.
\end{abstract}

% For peerreview papers, this IEEEtran command inserts a page break and
% creates the second title. It will be ignored for other modes.
\IEEEpeerreviewmaketitle


\input{intro.tex}
%\input{background.tex}
\input{method.tex}
\input{evaluation.tex}
\input{related.tex}
\input{conclusion.tex}
%\input{acknowledge.tex}

\bibliographystyle{ieeetran}
\bibliography{../libvina}



% that's all folks
\end{document}
